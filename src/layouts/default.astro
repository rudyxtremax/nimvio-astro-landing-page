---
import "@fontsource/inter/variable.css";
import Placeholder from "~/components/placeholder.astro";
import { getContentById } from "~/utils/dataFetching";

const { generator, site } = Astro;
const { layoutId } = Astro.props;

const response = await getContentById(fetch, layoutId);
const {
  favicon,
  pageTitle,
  metaDescription,
  metaOgTitle,
  metaOgType,
  metaOgDescription,
  metaOgImage,
  placeholders,
} = response.data[0].Data;
---

<!DOCTYPE html>
<html lang="en" class="motion-safe:scroll-smooth" data-theme="dark">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" href={favicon.MediaUrl} type="image/x-icon" />
    <meta name="generator" content={generator} />

    <title>{pageTitle}</title>
    <meta name="description" content={metaDescription} />

    <!-- social media -->
    <meta property="og:title" content={metaOgTitle} />
    <meta property="og:type" content={metaOgType} />
    <meta property="og:description" content={metaOgDescription} />
    <meta property="og:image" content={metaOgImage.MediaUrl} />
    <meta property="og:url" content={site} />
    <meta name="twitter:card" content="summary_large_image" />

    <!-- initialize theme -->
    <script is:inline>
      const themeSaved = localStorage.getItem("theme");

      if (themeSaved) {
        document.documentElement.dataset.theme = themeSaved;
      } else {
        const prefersDark = window.matchMedia(
          "(prefers-color-scheme: dark)"
        ).matches;
        document.documentElement.dataset.theme = prefersDark ? "dark" : "light";
      }

      window
        .matchMedia("(prefers-color-scheme: dark)")
        .addEventListener("change", (event) => {
          if (!localStorage.getItem("theme")) {
            document.documentElement.dataset.theme = event.matches
              ? "dark"
              : "light";
          }
        });
    </script>
  </head>
  <body
    class="overflow-x-hidden bg-default text-default text-base selection:bg-secondary selection:text-white"
    data-nimvio-project-id={`${import.meta.env.PUBLIC_PROJECT_ID}`}
  >
    <slot name="header">
      <Placeholder Ids={placeholders.ContentIDs} name="header" />
    </slot>

    <slot />

    <slot name="footer">
      <Placeholder Ids={placeholders.ContentIDs} name="footer" />
    </slot>
  </body>
</html>

<script>
  import WebLink from "@nimvio/live-preview-sdk";
  WebLink.init({
    queryParam: "preview",
    disableWeblink: false,
  });
</script>
