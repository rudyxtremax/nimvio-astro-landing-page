---
const { item } = Astro.props;

const sizes = "(min-width: 1024px) 33vw, (min-width: 768px) 50vw, 100vw";
---

<showcase-card data-nimvio-content-id={item.ContentID}>
  <a class="group aspect-video hover:!text-default" href={item.Data.url}>
    <figure class="relative h-full w-full overflow-hidden">
      <img
        class="h-full w-full bg-cover object-cover transition-all duration-300 group-hover:scale-110 group-hover:opacity-20 group-focus:scale-110 group-focus:opacity-20"
        src={item.Data.image.MediaUrl}
        sizes={sizes}
        alt={`A screenshot of ${item.Data.url}`}
      />      
      <figcaption class="absolute inset-0">
        <div
          class="flex h-full flex-col items-center justify-center gap-2 opacity-0 transition-all duration-300 group-hover:opacity-100 group-focus:opacity-100"
        >
          <h3 class="text-center font-extrabold uppercase text-xl">
            {item.Data.title}
          </h3>
          <p class="border border-current px-4 py-2">{item.Data.url}</p>
        </div>
      </figcaption>
    </figure>
  </a>
</showcase-card>

<script>
  import WebLink from "@nimvio/live-preview-sdk";
  import type { LivePreviewData } from "~/types";

  class ShowcaseCard extends HTMLElement {
    constructor() {
      super();

      const nimvioSdk = WebLink.init({
        queryParam: "preview",
        disableWeblink: false,
      });

      // Read the contentid from the data attribute.
      const contentId = this.dataset.nimvioContentId;

      nimvioSdk.livePreviewUtils.onPreviewContentChange((newData) => {
        const { id, formData }: LivePreviewData = newData;
        if (id === contentId) {
          const { title, url, image } = formData;

          const sectionEl = document.querySelector(
            `[data-nimvio-content-id='${id}']`
          );

          // Card title update
          sectionEl!.querySelector("h3")!.innerText = title;

          // Text url update
          sectionEl!.querySelector("p")!.innerText = url;

          // Background image update
          sectionEl!.querySelector("img")!.setAttribute("src", image.MediaUrl);          
        }
      });
    }
  }

  customElements.define("showcase-card", ShowcaseCard);
</script>
